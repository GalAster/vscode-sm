{
    "version": "v0.4.0",
    "scopeName": "source.sm",
    "uuid": "77108132-b3a9-4456-b8e6-05fca177371b",
    "information_for_contributors": [
        "aster: galaster@foxmail.com"
    ],
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#string"
        },
        {
            "include": "#number"
        }
    ],
    "repository": {
        "comment": {
            "patterns": [
                {
                    "name": "comment.block.sm",
                    "begin": "(%%%)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.block.sm"
                        }
                    },
                    "end": "(%%%)",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.block.sm"
                        }
                    },
                    "patterns": [
                        {
                            "include": "text.html.markdown"
                        }
                    ]
                },
                {
                    "name": "comment.line.sm",
                    "match": "(%).*$\\n?",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.line.sm"
                        }
                    }
                }
            ]
        },
        "keywords": {
            "comment": "keywords",
            "match": "\\b(using|def|iff|as)\\b",
            "captures": {
                "1": {
                    "name": "keyword.control.sm"
                }
            }
        },
        "operators": {
            "patterns": [
                {
                    "comment": "operators",
                    "match": "(:\\?|:=)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.bitwise.sm"
                        }
                    }
                },
                {
                    "comment": "operators",
                    "match": "(\\+|-)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.bitwise.sm"
                        }
                    }
                }
            ]
        },
        "number": {
            "patterns": [
                {
                    "match": "(?<!\\w)(0x[0-9a-fA-F]+)(_[A-Za-z][A-Za-z0-9_]*)?(?!\\w)",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.hex.sm"
                        },
                        "2": {
                            "name": "keyword.control.handler.byte.sm"
                        }
                    }
                },
                {
                    "match": "(?<!\\w)(0o[0-7]+)(_[A-Za-z][A-Za-z0-9_]*)?(?!\\w)",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.oct.sm"
                        },
                        "2": {
                            "name": "keyword.control.handler.byte.sm"
                        }
                    }
                },
                {
                    "match": "(?<!\\w)(0b[01]+)(_[A-Za-z][A-Za-z0-9_]*)?(?!\\w)",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.bin.sm"
                        },
                        "2": {
                            "name": "keyword.control.handler.byte.sm"
                        }
                    }
                },
                {
                    "match": "(?<!\\w)([\\+\\-]?(0|([1-9](([0-9]|_[0-9])+)?))(?:(?:\\.(0|([1-9](([0-9]|_[0-9])+)?)))?[eE][\\+\\-]?[1-9]_?[0-9]*|(?:\\.[0-9_]*)))([A-Za-z][A-Za-z0-9_]*)?(?!\\w)",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.float.sm"
                        },
                        "10": {
                            "name": "keyword.control.handler.number.sm"
                        }
                    }
                },
                {
                    "match": "(?<!\\w)((?:[\\+\\-]?(0|([1-9](([0-9]|_[0-9])+)?))))([A-Za-z_][A-Za-z0-9_]*)?(?!\\w)",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.integer.sm"
                        },
                        "6": {
                            "name": "keyword.control.handler.number.sm"
                        }
                    }
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "name": "string.quoted.block.sm",
                    "begin": "([A-Za-z_][A-Za-z0-9_]*)?\\s*(''')",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.handler.string.sm"
                        },
                        "2": {
                            "name": "punctuation.definition.string.block.sm"
                        }
                    },
                    "end": "(''')",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.string.block.sm"
                        }
                    }
                },
                {
                    "name": "string.quoted.block.sm",
                    "begin": "([A-Za-z_][A-Za-z0-9_]*)?\\s*(\"\"\")",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.handler.string.sm"
                        },
                        "2": {
                            "name": "punctuation.definition.string.block.sm"
                        }
                    },
                    "end": "(\"\"\")",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.string.block.sm"
                        }
                    },
                    "patterns": [
                        {
                            "match": "\\\\([btnfr\"\\\\\\n/ ]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})",
                            "name": "constant.character.escape.sm"
                        },
                        {
                            "match": "\\\\[^btnfr/\"\\\\\\n]",
                            "name": "invalid.illegal.escape.sm"
                        }
                    ]
                },
                {
                    "match": "([A-Za-z_][A-Za-z0-9_]*)?\\s*(\\'[^'\\\\]*(?:\\\\.[^'\\\\]*)*\\')",
                    "captures": {
                        "1": {
                            "name": "keyword.control.handler.string.sm"
                        },
                        "2": {
                            "name": "string.quoted.single.sm"
                        }
                    }
                },
                {
                    "match": "([A-Za-z_][A-Za-z0-9_]*)?\\s*(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")",
                    "captures": {
                        "1": {
                            "name": "keyword.control.handler.string.sm"
                        },
                        "2": {
                            "name": "string.quoted.single.sm"
                        }
                    },
                    "patterns": [
                        {
                            "match": "\\\\([btnfr\"\\\\\\n/ ]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})",
                            "name": "constant.character.escape.sm"
                        },
                        {
                            "match": "\\\\[^btnfr/\"\\\\\\n]",
                            "name": "invalid.illegal.escape.sm"
                        }
                    ]
                },
                {
                    "match": "([A-Za-z_][A-Za-z0-9_]*)?\\s*((\\|).*)$",
                    "captures": {
                        "1": {
                            "name": "keyword.control.handler.string.sm"
                        },
                        "2": {
                            "name": "string.raw.sm"
                        },
                        "3": {
                            "name": "keyword.control.handler.string.sm"
                        }
                    }
                }
            ]
        }
    }
}
